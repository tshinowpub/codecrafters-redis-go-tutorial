// Code generated by "enumer -type=RespInputType -json -output=./resp_input_type_enumer.go"; DO NOT EDIT.

package parser

import (
	"encoding/json"
	"fmt"
)

const _RespInputTypeName = "SimpleStringErrorIntegerBulkStringArrayUNKNOWN"

var _RespInputTypeIndex = [...]uint8{0, 12, 17, 24, 34, 39, 46}

func (i RespInputType) String() string {
	i -= 1
	if i < 0 || i >= RespInputType(len(_RespInputTypeIndex)-1) {
		return fmt.Sprintf("RespInputType(%d)", i+1)
	}
	return _RespInputTypeName[_RespInputTypeIndex[i]:_RespInputTypeIndex[i+1]]
}

var _RespInputTypeValues = []RespInputType{1, 2, 3, 4, 5, 6}

var _RespInputTypeNameToValueMap = map[string]RespInputType{
	_RespInputTypeName[0:12]:  1,
	_RespInputTypeName[12:17]: 2,
	_RespInputTypeName[17:24]: 3,
	_RespInputTypeName[24:34]: 4,
	_RespInputTypeName[34:39]: 5,
	_RespInputTypeName[39:46]: 6,
}

// RespInputTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func RespInputTypeString(s string) (RespInputType, error) {
	if val, ok := _RespInputTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to RespInputType values", s)
}

// RespInputTypeValues returns all values of the enum
func RespInputTypeValues() []RespInputType {
	return _RespInputTypeValues
}

// IsARespInputType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i RespInputType) IsARespInputType() bool {
	for _, v := range _RespInputTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for RespInputType
func (i RespInputType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for RespInputType
func (i *RespInputType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("RespInputType should be a string, got %s", data)
	}

	var err error
	*i, err = RespInputTypeString(s)
	return err
}
